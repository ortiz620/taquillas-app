# Requiere: Python + Flask + Google Sheets

from flask import Flask, render_template_string, request, redirect, url_for
from datetime import datetime
import os
import json
import gspread
from oauth2client.service_account import ServiceAccountCredentials

app = Flask(__name__)

taquillas = []
cortes = {}
gastos = {}

# Conexión a Google Sheets

def connect_to_sheets():
    credentials_json = os.environ.get("GOOGLE_SHEETS_CREDENTIALS")
    sheet_id = os.environ.get("GOOGLE_SPREADSHEET_ID")
    if not credentials_json or not sheet_id:
        return None, None, None

    credentials_dict = json.loads(credentials_json)
    scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
    creds = ServiceAccountCredentials.from_json_keyfile_dict(credentials_dict, scope)
    client = gspread.authorize(creds)
    sheet = client.open_by_key(sheet_id)
    return sheet.worksheet("Cortes"), sheet.worksheet("Gastos"), sheet

html = '''
<!DOCTYPE html>
<html>
<head>
    <title>Taquillas</title>
    <style>
        body {
            background-color: #0C2C55;
            color: white;
            font-family: Arial, sans-serif;
            padding: 20px;
        }
        input, select {
            margin: 5px;
            padding: 5px;
        }
        input[type="submit"] {
            background-color: #FF4C00;
            color: white;
            border: none;
            padding: 8px 16px;
        }
        .taquilla {
            background-color: #143D6B;
            padding: 10px;
            border-radius: 8px;
            margin-bottom: 15px;
        }
    </style>
</head>
<body>
    <h1>Control de Taquillas</h1>

    <h2>Agregar Taquilla</h2>
    <form method="post" action="/agregar">
        Nombre: <input type="text" name="nombre" required>
        Precio por boleto: <input type="number" name="precio" step="0.01" required>
        <input type="submit" value="Agregar">
    </form>

    <h2>Agregar Gasto</h2>
    <form method="post" action="/agregar_gasto">
        Descripción: <input type="text" name="descripcion" required>
        Monto: <input type="number" name="monto" step="0.01" required>
        <input type="submit" value="Guardar Gasto">
    </form>

    <h2>Registrar Ventas</h2>
    <form method="post" action="/calcular_todo">
        {% for t in taquillas %}
            <div class="taquilla">
                <h3>{{ t['nombre'] }} (Precio: ${{ t['precio'] }})</h3>
                Boleto inicial: <input type="number" name="inicial_{{ loop.index0 }}" required>
                Boleto final: <input type="number" name="final_{{ loop.index0 }}" required>
                <form method="post" action="/eliminar/{{ loop.index0 }}" style="display:inline;">
                    <input type="submit" value="Eliminar Taquilla">
                </form>
                <form method="get" action="/editar/{{ loop.index0 }}" style="display:inline;">
                    <input type="submit" value="Editar Taquilla">
                </form>
            </div>
        {% endfor %}
        <input type="submit" value="Calcular Todo">
    </form>

    <h2>Cortes del Día</h2>
    {% for dia in cortes %}
        <p>
            <strong>{{ dia }}</strong><br>
            Ingreso bruto: ${{ cortes[dia] }}<br>
            Gasto bruto: ${{ gastos.get(dia, 0.0) }}<br>
            Ingreso neto: ${{ cortes[dia] - gastos.get(dia, 0.0) }}
        </p>
    {% endfor %}

    <h2>Resumen General</h2>
    <p>
        Ingreso total acumulado: ${{ ingreso_total }}<br>
        Gasto total acumulado: ${{ gasto_total }}<br>
        Ingreso neto total: ${{ ingreso_total - gasto_total }}
    </p>
</body>
</html>
'''

@app.route('/')
def index():
    ingreso_total = sum(cortes.values())
    gasto_total = sum(gastos.values())

    return render_template_string(html, taquillas=taquillas, cortes=cortes, gastos=gastos,
                                  ingreso_total=ingreso_total, gasto_total=gasto_total)

@app.route('/agregar', methods=['POST'])
def agregar():
    nombre = request.form['nombre']
    precio = float(request.form['precio'])
    taquillas.append({'nombre': nombre, 'precio': precio, 'resultado': None})
    return redirect(url_for('index'))

@app.route('/editar/<int:index>', methods=['GET', 'POST'])
def editar(index):
    if request.method == 'POST':
        nombre = request.form['nombre']
        precio = float(request.form['precio'])
        taquillas[index]['nombre'] = nombre
        taquillas[index]['precio'] = precio
        return redirect(url_for('index'))
    else:
        taquilla = taquillas[index]
        form = f'''
        <form method="post">
            <h2>Editar Taquilla #{index+1}</h2>
            Nombre: <input type="text" name="nombre" value="{taquilla['nombre']}" required><br>
            Precio: <input type="number" name="precio" value="{taquilla['precio']}" step="0.01" required><br>
            <input type="submit" value="Guardar Cambios">
        </form>
        '''
        return form

@app.route('/eliminar/<int:index>', methods=['POST'])
def eliminar(index):
    if 0 <= index < len(taquillas):
        taquillas.pop(index)
    return redirect(url_for('index'))

@app.route('/agregar_gasto', methods=['POST'])
def agregar_gasto():
    descripcion = request.form['descripcion']
    monto = float(request.form['monto'])
    hoy = datetime.now().strftime('%Y-%m-%d')
    if hoy not in gastos:
        gastos[hoy] = 0.0
    gastos[hoy] += monto
    try:
        _, sheet_gastos, sheet = connect_to_sheets()
        if sheet_gastos:
            sheet_gastos.append_row([hoy, descripcion, monto])
        hoja_gastos_hist = None
        try:
            hoja_gastos_hist = sheet.worksheet("Historial_Gastos")
        except:
            hoja_gastos_hist = sheet.add_worksheet("Historial_Gastos", rows="1000", cols="5")
        hoja_gastos_hist.append_row([hoy, descripcion, monto])
    except Exception as e:
        print("Error al guardar gasto:", e)
    return redirect(url_for('index'))

@app.route('/calcular_todo', methods=['POST'])
def calcular_todo():
    hoy = datetime.now().strftime('%Y-%m-%d')
    total_dia = 0
    sheet_cortes, _, sheet = connect_to_sheets()

    hoja_corte_dia = None
    hoja_historial_general = None

    try:
        hoja_corte_dia = sheet.worksheet(f"Corte_{hoy}")
    except:
        hoja_corte_dia = sheet.add_worksheet(f"Corte_{hoy}", rows="1000", cols="10")
        hoja_corte_dia.append_row(["Fecha", "Taquilla", "Precio", "Inicial", "Final", "Boletos", "Total"])

    try:
        hoja_historial_general = sheet.worksheet("Historial_Ingresos")
    except:
        hoja_historial_general = sheet.add_worksheet("Historial_Ingresos", rows="1000", cols="10")
        hoja_historial_general.append_row(["Fecha", "Taquilla", "Precio", "Inicial", "Final", "Boletos", "Total"])

    for i, taquilla in enumerate(taquillas):
        inicial = int(request.form[f'inicial_{i}'])
        final = int(request.form[f'final_{i}'])
        boletos = final - inicial - 2
        boletos = boletos if boletos > 0 else 0
        resultado = boletos * taquilla['precio']
        taquillas[i]['resultado'] = resultado
        total_dia += resultado

        row = [hoy, taquilla['nombre'], taquilla['precio'], inicial, final, boletos, resultado]

        try:
            if sheet_cortes:
                sheet_cortes.append_row(row)
            hoja_corte_dia.append_row(row)
            hoja_historial_general.append_row(row)
        except Exception as e:
            print("Error al guardar corte:", e)

    if hoy not in cortes:
        cortes[hoy] = 0
    cortes[hoy] += total_dia

    return redirect(url_for('index'))

if __name__ == '__main__':
    app.run(debug=True)
